# Generated by Django 5.1.1 on 2024-09-08 18:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=1500)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=1500)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=1500)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(max_length=1500)),
                ('cover', models.ImageField(blank=True, upload_to='covers/')),
                ('background', models.ImageField(blank=True, upload_to='backgrounds/')),
                ('type', models.CharField(choices=[('MG', 'Manga'), ('OE', 'OEL-manga'), ('MH', 'Manhwa'), ('MU', 'Manhua'), ('CM', 'Comic')], max_length=2)),
                ('status', models.CharField(choices=[('ON', 'Ongoing'), ('CO', 'Completed'), ('AN', 'Announcement'), ('DI', 'Discontinued')], max_length=2)),
                ('rating', models.CharField(choices=[('PG-13', 'PG-13'), ('R', 'Restricted'), ('NC-17', 'NC-17')], max_length=5)),
                ('authors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_manga.author')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_manga.publisher')),
                ('releases', models.ManyToManyField(to='api_manga.release')),
                ('tags', models.ManyToManyField(to='api_manga.tags')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
    ]
